// Code generated by ent, DO NOT EDIT.

package depsusageevidence

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/safedep/vet/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldID, id))
}

// PackageHint applies equality check predicate on the "package_hint" field. It's identical to PackageHintEQ.
func PackageHint(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldPackageHint, v))
}

// ModuleName applies equality check predicate on the "module_name" field. It's identical to ModuleNameEQ.
func ModuleName(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleName, v))
}

// ModuleItem applies equality check predicate on the "module_item" field. It's identical to ModuleItemEQ.
func ModuleItem(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleItem, v))
}

// ModuleAlias applies equality check predicate on the "module_alias" field. It's identical to ModuleAliasEQ.
func ModuleAlias(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleAlias, v))
}

// IsWildCardUsage applies equality check predicate on the "is_wild_card_usage" field. It's identical to IsWildCardUsageEQ.
func IsWildCardUsage(v bool) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldIsWildCardUsage, v))
}

// Identifier applies equality check predicate on the "identifier" field. It's identical to IdentifierEQ.
func Identifier(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldIdentifier, v))
}

// UsageFilePath applies equality check predicate on the "usage_file_path" field. It's identical to UsageFilePathEQ.
func UsageFilePath(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldUsageFilePath, v))
}

// Line applies equality check predicate on the "line" field. It's identical to LineEQ.
func Line(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldLine, v))
}

// PackageHintEQ applies the EQ predicate on the "package_hint" field.
func PackageHintEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldPackageHint, v))
}

// PackageHintNEQ applies the NEQ predicate on the "package_hint" field.
func PackageHintNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldPackageHint, v))
}

// PackageHintIn applies the In predicate on the "package_hint" field.
func PackageHintIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldPackageHint, vs...))
}

// PackageHintNotIn applies the NotIn predicate on the "package_hint" field.
func PackageHintNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldPackageHint, vs...))
}

// PackageHintGT applies the GT predicate on the "package_hint" field.
func PackageHintGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldPackageHint, v))
}

// PackageHintGTE applies the GTE predicate on the "package_hint" field.
func PackageHintGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldPackageHint, v))
}

// PackageHintLT applies the LT predicate on the "package_hint" field.
func PackageHintLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldPackageHint, v))
}

// PackageHintLTE applies the LTE predicate on the "package_hint" field.
func PackageHintLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldPackageHint, v))
}

// PackageHintContains applies the Contains predicate on the "package_hint" field.
func PackageHintContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldPackageHint, v))
}

// PackageHintHasPrefix applies the HasPrefix predicate on the "package_hint" field.
func PackageHintHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldPackageHint, v))
}

// PackageHintHasSuffix applies the HasSuffix predicate on the "package_hint" field.
func PackageHintHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldPackageHint, v))
}

// PackageHintIsNil applies the IsNil predicate on the "package_hint" field.
func PackageHintIsNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIsNull(FieldPackageHint))
}

// PackageHintNotNil applies the NotNil predicate on the "package_hint" field.
func PackageHintNotNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotNull(FieldPackageHint))
}

// PackageHintEqualFold applies the EqualFold predicate on the "package_hint" field.
func PackageHintEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldPackageHint, v))
}

// PackageHintContainsFold applies the ContainsFold predicate on the "package_hint" field.
func PackageHintContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldPackageHint, v))
}

// ModuleNameEQ applies the EQ predicate on the "module_name" field.
func ModuleNameEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleName, v))
}

// ModuleNameNEQ applies the NEQ predicate on the "module_name" field.
func ModuleNameNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldModuleName, v))
}

// ModuleNameIn applies the In predicate on the "module_name" field.
func ModuleNameIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldModuleName, vs...))
}

// ModuleNameNotIn applies the NotIn predicate on the "module_name" field.
func ModuleNameNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldModuleName, vs...))
}

// ModuleNameGT applies the GT predicate on the "module_name" field.
func ModuleNameGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldModuleName, v))
}

// ModuleNameGTE applies the GTE predicate on the "module_name" field.
func ModuleNameGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldModuleName, v))
}

// ModuleNameLT applies the LT predicate on the "module_name" field.
func ModuleNameLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldModuleName, v))
}

// ModuleNameLTE applies the LTE predicate on the "module_name" field.
func ModuleNameLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldModuleName, v))
}

// ModuleNameContains applies the Contains predicate on the "module_name" field.
func ModuleNameContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldModuleName, v))
}

// ModuleNameHasPrefix applies the HasPrefix predicate on the "module_name" field.
func ModuleNameHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldModuleName, v))
}

// ModuleNameHasSuffix applies the HasSuffix predicate on the "module_name" field.
func ModuleNameHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldModuleName, v))
}

// ModuleNameEqualFold applies the EqualFold predicate on the "module_name" field.
func ModuleNameEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldModuleName, v))
}

// ModuleNameContainsFold applies the ContainsFold predicate on the "module_name" field.
func ModuleNameContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldModuleName, v))
}

// ModuleItemEQ applies the EQ predicate on the "module_item" field.
func ModuleItemEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleItem, v))
}

// ModuleItemNEQ applies the NEQ predicate on the "module_item" field.
func ModuleItemNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldModuleItem, v))
}

// ModuleItemIn applies the In predicate on the "module_item" field.
func ModuleItemIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldModuleItem, vs...))
}

// ModuleItemNotIn applies the NotIn predicate on the "module_item" field.
func ModuleItemNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldModuleItem, vs...))
}

// ModuleItemGT applies the GT predicate on the "module_item" field.
func ModuleItemGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldModuleItem, v))
}

// ModuleItemGTE applies the GTE predicate on the "module_item" field.
func ModuleItemGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldModuleItem, v))
}

// ModuleItemLT applies the LT predicate on the "module_item" field.
func ModuleItemLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldModuleItem, v))
}

// ModuleItemLTE applies the LTE predicate on the "module_item" field.
func ModuleItemLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldModuleItem, v))
}

// ModuleItemContains applies the Contains predicate on the "module_item" field.
func ModuleItemContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldModuleItem, v))
}

// ModuleItemHasPrefix applies the HasPrefix predicate on the "module_item" field.
func ModuleItemHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldModuleItem, v))
}

// ModuleItemHasSuffix applies the HasSuffix predicate on the "module_item" field.
func ModuleItemHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldModuleItem, v))
}

// ModuleItemIsNil applies the IsNil predicate on the "module_item" field.
func ModuleItemIsNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIsNull(FieldModuleItem))
}

// ModuleItemNotNil applies the NotNil predicate on the "module_item" field.
func ModuleItemNotNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotNull(FieldModuleItem))
}

// ModuleItemEqualFold applies the EqualFold predicate on the "module_item" field.
func ModuleItemEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldModuleItem, v))
}

// ModuleItemContainsFold applies the ContainsFold predicate on the "module_item" field.
func ModuleItemContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldModuleItem, v))
}

// ModuleAliasEQ applies the EQ predicate on the "module_alias" field.
func ModuleAliasEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldModuleAlias, v))
}

// ModuleAliasNEQ applies the NEQ predicate on the "module_alias" field.
func ModuleAliasNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldModuleAlias, v))
}

// ModuleAliasIn applies the In predicate on the "module_alias" field.
func ModuleAliasIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldModuleAlias, vs...))
}

// ModuleAliasNotIn applies the NotIn predicate on the "module_alias" field.
func ModuleAliasNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldModuleAlias, vs...))
}

// ModuleAliasGT applies the GT predicate on the "module_alias" field.
func ModuleAliasGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldModuleAlias, v))
}

// ModuleAliasGTE applies the GTE predicate on the "module_alias" field.
func ModuleAliasGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldModuleAlias, v))
}

// ModuleAliasLT applies the LT predicate on the "module_alias" field.
func ModuleAliasLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldModuleAlias, v))
}

// ModuleAliasLTE applies the LTE predicate on the "module_alias" field.
func ModuleAliasLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldModuleAlias, v))
}

// ModuleAliasContains applies the Contains predicate on the "module_alias" field.
func ModuleAliasContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldModuleAlias, v))
}

// ModuleAliasHasPrefix applies the HasPrefix predicate on the "module_alias" field.
func ModuleAliasHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldModuleAlias, v))
}

// ModuleAliasHasSuffix applies the HasSuffix predicate on the "module_alias" field.
func ModuleAliasHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldModuleAlias, v))
}

// ModuleAliasIsNil applies the IsNil predicate on the "module_alias" field.
func ModuleAliasIsNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIsNull(FieldModuleAlias))
}

// ModuleAliasNotNil applies the NotNil predicate on the "module_alias" field.
func ModuleAliasNotNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotNull(FieldModuleAlias))
}

// ModuleAliasEqualFold applies the EqualFold predicate on the "module_alias" field.
func ModuleAliasEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldModuleAlias, v))
}

// ModuleAliasContainsFold applies the ContainsFold predicate on the "module_alias" field.
func ModuleAliasContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldModuleAlias, v))
}

// IsWildCardUsageEQ applies the EQ predicate on the "is_wild_card_usage" field.
func IsWildCardUsageEQ(v bool) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldIsWildCardUsage, v))
}

// IsWildCardUsageNEQ applies the NEQ predicate on the "is_wild_card_usage" field.
func IsWildCardUsageNEQ(v bool) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldIsWildCardUsage, v))
}

// IsWildCardUsageIsNil applies the IsNil predicate on the "is_wild_card_usage" field.
func IsWildCardUsageIsNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIsNull(FieldIsWildCardUsage))
}

// IsWildCardUsageNotNil applies the NotNil predicate on the "is_wild_card_usage" field.
func IsWildCardUsageNotNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotNull(FieldIsWildCardUsage))
}

// IdentifierEQ applies the EQ predicate on the "identifier" field.
func IdentifierEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldIdentifier, v))
}

// IdentifierNEQ applies the NEQ predicate on the "identifier" field.
func IdentifierNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldIdentifier, v))
}

// IdentifierIn applies the In predicate on the "identifier" field.
func IdentifierIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldIdentifier, vs...))
}

// IdentifierNotIn applies the NotIn predicate on the "identifier" field.
func IdentifierNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldIdentifier, vs...))
}

// IdentifierGT applies the GT predicate on the "identifier" field.
func IdentifierGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldIdentifier, v))
}

// IdentifierGTE applies the GTE predicate on the "identifier" field.
func IdentifierGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldIdentifier, v))
}

// IdentifierLT applies the LT predicate on the "identifier" field.
func IdentifierLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldIdentifier, v))
}

// IdentifierLTE applies the LTE predicate on the "identifier" field.
func IdentifierLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldIdentifier, v))
}

// IdentifierContains applies the Contains predicate on the "identifier" field.
func IdentifierContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldIdentifier, v))
}

// IdentifierHasPrefix applies the HasPrefix predicate on the "identifier" field.
func IdentifierHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldIdentifier, v))
}

// IdentifierHasSuffix applies the HasSuffix predicate on the "identifier" field.
func IdentifierHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldIdentifier, v))
}

// IdentifierIsNil applies the IsNil predicate on the "identifier" field.
func IdentifierIsNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIsNull(FieldIdentifier))
}

// IdentifierNotNil applies the NotNil predicate on the "identifier" field.
func IdentifierNotNil() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotNull(FieldIdentifier))
}

// IdentifierEqualFold applies the EqualFold predicate on the "identifier" field.
func IdentifierEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldIdentifier, v))
}

// IdentifierContainsFold applies the ContainsFold predicate on the "identifier" field.
func IdentifierContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldIdentifier, v))
}

// UsageFilePathEQ applies the EQ predicate on the "usage_file_path" field.
func UsageFilePathEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldUsageFilePath, v))
}

// UsageFilePathNEQ applies the NEQ predicate on the "usage_file_path" field.
func UsageFilePathNEQ(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldUsageFilePath, v))
}

// UsageFilePathIn applies the In predicate on the "usage_file_path" field.
func UsageFilePathIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldUsageFilePath, vs...))
}

// UsageFilePathNotIn applies the NotIn predicate on the "usage_file_path" field.
func UsageFilePathNotIn(vs ...string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldUsageFilePath, vs...))
}

// UsageFilePathGT applies the GT predicate on the "usage_file_path" field.
func UsageFilePathGT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldUsageFilePath, v))
}

// UsageFilePathGTE applies the GTE predicate on the "usage_file_path" field.
func UsageFilePathGTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldUsageFilePath, v))
}

// UsageFilePathLT applies the LT predicate on the "usage_file_path" field.
func UsageFilePathLT(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldUsageFilePath, v))
}

// UsageFilePathLTE applies the LTE predicate on the "usage_file_path" field.
func UsageFilePathLTE(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldUsageFilePath, v))
}

// UsageFilePathContains applies the Contains predicate on the "usage_file_path" field.
func UsageFilePathContains(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContains(FieldUsageFilePath, v))
}

// UsageFilePathHasPrefix applies the HasPrefix predicate on the "usage_file_path" field.
func UsageFilePathHasPrefix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasPrefix(FieldUsageFilePath, v))
}

// UsageFilePathHasSuffix applies the HasSuffix predicate on the "usage_file_path" field.
func UsageFilePathHasSuffix(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldHasSuffix(FieldUsageFilePath, v))
}

// UsageFilePathEqualFold applies the EqualFold predicate on the "usage_file_path" field.
func UsageFilePathEqualFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEqualFold(FieldUsageFilePath, v))
}

// UsageFilePathContainsFold applies the ContainsFold predicate on the "usage_file_path" field.
func UsageFilePathContainsFold(v string) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldContainsFold(FieldUsageFilePath, v))
}

// LineEQ applies the EQ predicate on the "line" field.
func LineEQ(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldEQ(FieldLine, v))
}

// LineNEQ applies the NEQ predicate on the "line" field.
func LineNEQ(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNEQ(FieldLine, v))
}

// LineIn applies the In predicate on the "line" field.
func LineIn(vs ...uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldIn(FieldLine, vs...))
}

// LineNotIn applies the NotIn predicate on the "line" field.
func LineNotIn(vs ...uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldNotIn(FieldLine, vs...))
}

// LineGT applies the GT predicate on the "line" field.
func LineGT(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGT(FieldLine, v))
}

// LineGTE applies the GTE predicate on the "line" field.
func LineGTE(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldGTE(FieldLine, v))
}

// LineLT applies the LT predicate on the "line" field.
func LineLT(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLT(FieldLine, v))
}

// LineLTE applies the LTE predicate on the "line" field.
func LineLTE(v uint) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.FieldLTE(FieldLine, v))
}

// HasUsedIn applies the HasEdge predicate on the "used_in" edge.
func HasUsedIn() predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, UsedInTable, UsedInColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUsedInWith applies the HasEdge predicate on the "used_in" edge with a given conditions (other predicates).
func HasUsedInWith(preds ...predicate.CodeSourceFile) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(func(s *sql.Selector) {
		step := newUsedInStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DepsUsageEvidence) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DepsUsageEvidence) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DepsUsageEvidence) predicate.DepsUsageEvidence {
	return predicate.DepsUsageEvidence(sql.NotPredicates(p))
}
