// Code generated by ent, DO NOT EDIT.

package reportlicense

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the reportlicense type in the database.
	Label = "report_license"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLicenseID holds the string denoting the license_id field in the database.
	FieldLicenseID = "license_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSpdxID holds the string denoting the spdx_id field in the database.
	FieldSpdxID = "spdx_id"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldIsOsiApproved holds the string denoting the is_osi_approved field in the database.
	FieldIsOsiApproved = "is_osi_approved"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the reportlicense in the database.
	Table = "report_licenses"
)

// Columns holds all SQL columns for reportlicense fields.
var Columns = []string{
	FieldID,
	FieldLicenseID,
	FieldName,
	FieldSpdxID,
	FieldURL,
	FieldIsOsiApproved,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// LicenseIDValidator is a validator for the "license_id" field. It is called by the builders before save.
	LicenseIDValidator func(string) error
)

// OrderOption defines the ordering options for the ReportLicense queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByLicenseID orders the results by the license_id field.
func ByLicenseID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLicenseID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// BySpdxID orders the results by the spdx_id field.
func BySpdxID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSpdxID, opts...).ToFunc()
}

// ByURL orders the results by the url field.
func ByURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldURL, opts...).ToFunc()
}

// ByIsOsiApproved orders the results by the is_osi_approved field.
func ByIsOsiApproved(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsOsiApproved, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
