#!/bin/bash

# Usage:
#   $ bash ./diff_docgen.sh SOURCE_DIR TARGET_DIR
# like:
#   $ bash ./diff_docgen.sh ./docs/manual ./temp-dir/
# Check diff between ./docs/manual and ./temp-dir/ considering some ignore patterns (see below)
#
# IMPORTANT:
# We have to do  vet*.md in this script because there we non-generated files also like index.md and _config.yaml

# Configuration
SOURCE_DIR="${1:-}"
TARGET_DIR="${2:-}"

# We have few issues in exact diffing / and matching of this type of generated files
#
# 1. Enum values can change the order, example if a cli flag support enums values, like [`PYTHON`, `GO`, `JAVA`]
#   Then we can't guarantee the order of these values, so diff may show a change
# 2. "Auto generated by cobra on [DATE]" line can change when ever we generate with the latest date
#
# For this type of issues, we use ignore pattern in this script to ignore any possible lines which shows dynamic nature
# Add your `ignore pattern` when you there is a diff on some dynamic line.
IGNORE_PATTERNS=(
  "^Auto generated by spf13/cobra on"
  "--lang stringArray.*Source code languages to analyze (default \[.*\])"
)

# Validate SOURCE_DIR is provided
if [ -z "$SOURCE_DIR" ]; then
  echo "❌ Error: SOURCE_DIR not provided"
  echo "Usage: $0 <source-directory> <target-directory>"
  exit 1
fi

# Validate TARGET_DIR is provided
if [ -z "$TARGET_DIR" ]; then
  echo "❌ Error: TARGET_DIR not provided"
  echo "Usage: $0 <source-directory> <target-directory>"
  exit 1
fi

# Check if SOURCE_DIR exists
if [ ! -d "$SOURCE_DIR" ]; then
  echo "❌ Error: Source directory '$SOURCE_DIR' does not exist"
  exit 1
fi

# Check if TARGET_DIR exists
if [ ! -d "$TARGET_DIR" ]; then
  echo "❌ Error: Target directory '$TARGET_DIR' does not exist"
  exit 1
fi

# Build diff ignore flags from patterns
DIFF_IGNORE_FLAGS=()
for pattern in "${IGNORE_PATTERNS[@]}"; do
  DIFF_IGNORE_FLAGS+=(-I "$pattern")
done

EXIT_CODE=0

# First, check if the same files exist
for file in "$SOURCE_DIR"/vet*.md; do
  basename_file=$(basename "$file")
  if [ ! -f "$TARGET_DIR/$basename_file" ]; then
    echo "❌ Missing in $TARGET_DIR/: $basename_file"
    EXIT_CODE=1
  fi
done

# Then compare content of matching files (ignoring dynamic lines)
for file in "$SOURCE_DIR"/vet*.md; do
  basename_file=$(basename "$file")
  if [ -f "$TARGET_DIR/$basename_file" ]; then
    if ! diff -q "${DIFF_IGNORE_FLAGS[@]}" "$file" "$TARGET_DIR/$basename_file" > /dev/null; then
      echo "❌ Different: $basename_file"
      diff "${DIFF_IGNORE_FLAGS[@]}" "$file" "$TARGET_DIR/$basename_file" || true
      EXIT_CODE=1
    else
      echo "✅ Identical: $basename_file"
    fi
  fi
done

exit $EXIT_CODE
