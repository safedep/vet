// Package insightapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.10.1 DO NOT EDIT.
package insightapi

import (
	"encoding/json"
	"fmt"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	Api_keyScopes = "api_key.Scopes"
)

// Defines values for License.
const (
	LicenseAAL License = "AAL"

	LicenseADSL License = "ADSL"

	LicenseAFL11 License = "AFL-1.1"

	LicenseAFL12 License = "AFL-1.2"

	LicenseAFL20 License = "AFL-2.0"

	LicenseAFL21 License = "AFL-2.1"

	LicenseAFL30 License = "AFL-3.0"

	LicenseAGPL10 License = "AGPL-1.0"

	LicenseAGPL10Only License = "AGPL-1.0-only"

	LicenseAGPL10OrLater License = "AGPL-1.0-or-later"

	LicenseAGPL30 License = "AGPL-3.0"

	LicenseAGPL30Only License = "AGPL-3.0-only"

	LicenseAGPL30OrLater License = "AGPL-3.0-or-later"

	LicenseAMDPLPA License = "AMDPLPA"

	LicenseAML License = "AML"

	LicenseAMPAS License = "AMPAS"

	LicenseANTLRPD License = "ANTLR-PD"

	LicenseANTLRPDFallback License = "ANTLR-PD-fallback"

	LicenseAPAFML License = "APAFML"

	LicenseAPL10 License = "APL-1.0"

	LicenseAPSL10 License = "APSL-1.0"

	LicenseAPSL11 License = "APSL-1.1"

	LicenseAPSL12 License = "APSL-1.2"

	LicenseAPSL20 License = "APSL-2.0"

	LicenseAbstyles License = "Abstyles"

	LicenseAdobe2006 License = "Adobe-2006"

	LicenseAdobeGlyph License = "Adobe-Glyph"

	LicenseAfmparse License = "Afmparse"

	LicenseAladdin License = "Aladdin"

	LicenseApache10 License = "Apache-1.0"

	LicenseApache11 License = "Apache-1.1"

	LicenseApache20 License = "Apache-2.0"

	LicenseAppS2p License = "App-s2p"

	LicenseArphic1999 License = "Arphic-1999"

	LicenseArtistic10 License = "Artistic-1.0"

	LicenseArtistic10Cl8 License = "Artistic-1.0-cl8"

	LicenseArtistic10Perl License = "Artistic-1.0-Perl"

	LicenseArtistic20 License = "Artistic-2.0"

	LicenseBSD1Clause License = "BSD-1-Clause"

	LicenseBSD2Clause License = "BSD-2-Clause"

	LicenseBSD2ClauseFreeBSD License = "BSD-2-Clause-FreeBSD"

	LicenseBSD2ClauseNetBSD License = "BSD-2-Clause-NetBSD"

	LicenseBSD2ClausePatent License = "BSD-2-Clause-Patent"

	LicenseBSD2ClauseViews License = "BSD-2-Clause-Views"

	LicenseBSD3Clause License = "BSD-3-Clause"

	LicenseBSD3ClauseAttribution License = "BSD-3-Clause-Attribution"

	LicenseBSD3ClauseClear License = "BSD-3-Clause-Clear"

	LicenseBSD3ClauseLBNL License = "BSD-3-Clause-LBNL"

	LicenseBSD3ClauseModification License = "BSD-3-Clause-Modification"

	LicenseBSD3ClauseNoMilitaryLicense License = "BSD-3-Clause-No-Military-License"

	LicenseBSD3ClauseNoNuclearLicense License = "BSD-3-Clause-No-Nuclear-License"

	LicenseBSD3ClauseNoNuclearLicense2014 License = "BSD-3-Clause-No-Nuclear-License-2014"

	LicenseBSD3ClauseNoNuclearWarranty License = "BSD-3-Clause-No-Nuclear-Warranty"

	LicenseBSD3ClauseOpenMPI License = "BSD-3-Clause-Open-MPI"

	LicenseBSD4Clause License = "BSD-4-Clause"

	LicenseBSD4ClauseShortened License = "BSD-4-Clause-Shortened"

	LicenseBSD4ClauseUC License = "BSD-4-Clause-UC"

	LicenseBSDProtection License = "BSD-Protection"

	LicenseBSDSourceCode License = "BSD-Source-Code"

	LicenseBSL10 License = "BSL-1.0"

	LicenseBUSL11 License = "BUSL-1.1"

	LicenseBaekmuk License = "Baekmuk"

	LicenseBahyph License = "Bahyph"

	LicenseBarr License = "Barr"

	LicenseBeerware License = "Beerware"

	LicenseBitTorrent10 License = "BitTorrent-1.0"

	LicenseBitTorrent11 License = "BitTorrent-1.1"

	LicenseBitstreamVera License = "Bitstream-Vera"

	LicenseBlessing License = "blessing"

	LicenseBlueOak100 License = "BlueOak-1.0.0"

	LicenseBorceux License = "Borceux"

	LicenseBzip2105 License = "bzip2-1.0.5"

	LicenseBzip2106 License = "bzip2-1.0.6"

	LicenseCAL10 License = "CAL-1.0"

	LicenseCAL10CombinedWorkException License = "CAL-1.0-Combined-Work-Exception"

	LicenseCATOSL11 License = "CATOSL-1.1"

	LicenseCC010 License = "CC0-1.0"

	LicenseCCBY10 License = "CC-BY-1.0"

	LicenseCCBY20 License = "CC-BY-2.0"

	LicenseCCBY25 License = "CC-BY-2.5"

	LicenseCCBY25AU License = "CC-BY-2.5-AU"

	LicenseCCBY30 License = "CC-BY-3.0"

	LicenseCCBY30AT License = "CC-BY-3.0-AT"

	LicenseCCBY30DE License = "CC-BY-3.0-DE"

	LicenseCCBY30IGO License = "CC-BY-3.0-IGO"

	LicenseCCBY30NL License = "CC-BY-3.0-NL"

	LicenseCCBY30US License = "CC-BY-3.0-US"

	LicenseCCBY40 License = "CC-BY-4.0"

	LicenseCCBYNC10 License = "CC-BY-NC-1.0"

	LicenseCCBYNC20 License = "CC-BY-NC-2.0"

	LicenseCCBYNC25 License = "CC-BY-NC-2.5"

	LicenseCCBYNC30 License = "CC-BY-NC-3.0"

	LicenseCCBYNC30DE License = "CC-BY-NC-3.0-DE"

	LicenseCCBYNC40 License = "CC-BY-NC-4.0"

	LicenseCCBYNCND10 License = "CC-BY-NC-ND-1.0"

	LicenseCCBYNCND20 License = "CC-BY-NC-ND-2.0"

	LicenseCCBYNCND25 License = "CC-BY-NC-ND-2.5"

	LicenseCCBYNCND30 License = "CC-BY-NC-ND-3.0"

	LicenseCCBYNCND30DE License = "CC-BY-NC-ND-3.0-DE"

	LicenseCCBYNCND30IGO License = "CC-BY-NC-ND-3.0-IGO"

	LicenseCCBYNCND40 License = "CC-BY-NC-ND-4.0"

	LicenseCCBYNCSA10 License = "CC-BY-NC-SA-1.0"

	LicenseCCBYNCSA20 License = "CC-BY-NC-SA-2.0"

	LicenseCCBYNCSA20FR License = "CC-BY-NC-SA-2.0-FR"

	LicenseCCBYNCSA20UK License = "CC-BY-NC-SA-2.0-UK"

	LicenseCCBYNCSA25 License = "CC-BY-NC-SA-2.5"

	LicenseCCBYNCSA30 License = "CC-BY-NC-SA-3.0"

	LicenseCCBYNCSA30DE License = "CC-BY-NC-SA-3.0-DE"

	LicenseCCBYNCSA30IGO License = "CC-BY-NC-SA-3.0-IGO"

	LicenseCCBYNCSA40 License = "CC-BY-NC-SA-4.0"

	LicenseCCBYND10 License = "CC-BY-ND-1.0"

	LicenseCCBYND20 License = "CC-BY-ND-2.0"

	LicenseCCBYND25 License = "CC-BY-ND-2.5"

	LicenseCCBYND30 License = "CC-BY-ND-3.0"

	LicenseCCBYND30DE License = "CC-BY-ND-3.0-DE"

	LicenseCCBYND40 License = "CC-BY-ND-4.0"

	LicenseCCBYSA10 License = "CC-BY-SA-1.0"

	LicenseCCBYSA20 License = "CC-BY-SA-2.0"

	LicenseCCBYSA20UK License = "CC-BY-SA-2.0-UK"

	LicenseCCBYSA21JP License = "CC-BY-SA-2.1-JP"

	LicenseCCBYSA25 License = "CC-BY-SA-2.5"

	LicenseCCBYSA30 License = "CC-BY-SA-3.0"

	LicenseCCBYSA30AT License = "CC-BY-SA-3.0-AT"

	LicenseCCBYSA30DE License = "CC-BY-SA-3.0-DE"

	LicenseCCBYSA40 License = "CC-BY-SA-4.0"

	LicenseCCPDDC License = "CC-PDDC"

	LicenseCDDL10 License = "CDDL-1.0"

	LicenseCDDL11 License = "CDDL-1.1"

	LicenseCDL10 License = "CDL-1.0"

	LicenseCDLAPermissive10 License = "CDLA-Permissive-1.0"

	LicenseCDLAPermissive20 License = "CDLA-Permissive-2.0"

	LicenseCDLASharing10 License = "CDLA-Sharing-1.0"

	LicenseCECILL10 License = "CECILL-1.0"

	LicenseCECILL11 License = "CECILL-1.1"

	LicenseCECILL20 License = "CECILL-2.0"

	LicenseCECILL21 License = "CECILL-2.1"

	LicenseCECILLB License = "CECILL-B"

	LicenseCECILLC License = "CECILL-C"

	LicenseCERNOHL11 License = "CERN-OHL-1.1"

	LicenseCERNOHL12 License = "CERN-OHL-1.2"

	LicenseCERNOHLP20 License = "CERN-OHL-P-2.0"

	LicenseCERNOHLS20 License = "CERN-OHL-S-2.0"

	LicenseCERNOHLW20 License = "CERN-OHL-W-2.0"

	LicenseCNRIJython License = "CNRI-Jython"

	LicenseCNRIPython License = "CNRI-Python"

	LicenseCNRIPythonGPLCompatible License = "CNRI-Python-GPL-Compatible"

	LicenseCOIL10 License = "COIL-1.0"

	LicenseCPAL10 License = "CPAL-1.0"

	LicenseCPL10 License = "CPL-1.0"

	LicenseCPOL102 License = "CPOL-1.02"

	LicenseCUAOPL10 License = "CUA-OPL-1.0"

	LicenseCUDA10 License = "C-UDA-1.0"

	LicenseCaldera License = "Caldera"

	LicenseCheckmk License = "checkmk"

	LicenseClArtistic License = "ClArtistic"

	LicenseCommunitySpec10 License = "Community-Spec-1.0"

	LicenseCondor11 License = "Condor-1.1"

	LicenseCopyleftNext030 License = "copyleft-next-0.3.0"

	LicenseCopyleftNext031 License = "copyleft-next-0.3.1"

	LicenseCrossword License = "Crossword"

	LicenseCrystalStacker License = "CrystalStacker"

	LicenseCube License = "Cube"

	LicenseCurl License = "curl"

	LicenseDFSL10 License = "D-FSL-1.0"

	LicenseDLDEBY20 License = "DL-DE-BY-2.0"

	LicenseDOC License = "DOC"

	LicenseDRL10 License = "DRL-1.0"

	LicenseDSDP License = "DSDP"

	LicenseDiffmark License = "diffmark"

	LicenseDotseqn License = "Dotseqn"

	LicenseDvipdfm License = "dvipdfm"

	LicenseECL10 License = "ECL-1.0"

	LicenseECL20 License = "ECL-2.0"

	LicenseECos20 License = "eCos-2.0"

	LicenseEFL10 License = "EFL-1.0"

	LicenseEFL20 License = "EFL-2.0"

	LicenseEGenix License = "eGenix"

	LicenseEPICS License = "EPICS"

	LicenseEPL10 License = "EPL-1.0"

	LicenseEPL20 License = "EPL-2.0"

	LicenseEUDatagrid License = "EUDatagrid"

	LicenseEUPL10 License = "EUPL-1.0"

	LicenseEUPL11 License = "EUPL-1.1"

	LicenseEUPL12 License = "EUPL-1.2"

	LicenseElastic20 License = "Elastic-2.0"

	LicenseEntessa License = "Entessa"

	LicenseErlPL11 License = "ErlPL-1.1"

	LicenseEtalab20 License = "etalab-2.0"

	LicenseEurosym License = "Eurosym"

	LicenseFDKAAC License = "FDK-AAC"

	LicenseFSFAP License = "FSFAP"

	LicenseFSFUL License = "FSFUL"

	LicenseFSFULLR License = "FSFULLR"

	LicenseFSFULLRWD License = "FSFULLRWD"

	LicenseFTL License = "FTL"

	LicenseFair License = "Fair"

	LicenseFrameworx10 License = "Frameworx-1.0"

	LicenseFreeBSDDOC License = "FreeBSD-DOC"

	LicenseFreeImage License = "FreeImage"

	LicenseGD License = "GD"

	LicenseGFDL11 License = "GFDL-1.1"

	LicenseGFDL11InvariantsOnly License = "GFDL-1.1-invariants-only"

	LicenseGFDL11InvariantsOrLater License = "GFDL-1.1-invariants-or-later"

	LicenseGFDL11NoInvariantsOnly License = "GFDL-1.1-no-invariants-only"

	LicenseGFDL11NoInvariantsOrLater License = "GFDL-1.1-no-invariants-or-later"

	LicenseGFDL11Only License = "GFDL-1.1-only"

	LicenseGFDL11OrLater License = "GFDL-1.1-or-later"

	LicenseGFDL12 License = "GFDL-1.2"

	LicenseGFDL12InvariantsOnly License = "GFDL-1.2-invariants-only"

	LicenseGFDL12InvariantsOrLater License = "GFDL-1.2-invariants-or-later"

	LicenseGFDL12NoInvariantsOnly License = "GFDL-1.2-no-invariants-only"

	LicenseGFDL12NoInvariantsOrLater License = "GFDL-1.2-no-invariants-or-later"

	LicenseGFDL12Only License = "GFDL-1.2-only"

	LicenseGFDL12OrLater License = "GFDL-1.2-or-later"

	LicenseGFDL13 License = "GFDL-1.3"

	LicenseGFDL13InvariantsOnly License = "GFDL-1.3-invariants-only"

	LicenseGFDL13InvariantsOrLater License = "GFDL-1.3-invariants-or-later"

	LicenseGFDL13NoInvariantsOnly License = "GFDL-1.3-no-invariants-only"

	LicenseGFDL13NoInvariantsOrLater License = "GFDL-1.3-no-invariants-or-later"

	LicenseGFDL13Only License = "GFDL-1.3-only"

	LicenseGFDL13OrLater License = "GFDL-1.3-or-later"

	LicenseGL2PS License = "GL2PS"

	LicenseGLWTPL License = "GLWTPL"

	LicenseGPL10 License = "GPL-1.0"

	LicenseGPL101 License = "GPL-1.0+"

	LicenseGPL10Only License = "GPL-1.0-only"

	LicenseGPL10OrLater License = "GPL-1.0-or-later"

	LicenseGPL20 License = "GPL-2.0"

	LicenseGPL201 License = "GPL-2.0+"

	LicenseGPL20Only License = "GPL-2.0-only"

	LicenseGPL20OrLater License = "GPL-2.0-or-later"

	LicenseGPL20WithAutoconfException License = "GPL-2.0-with-autoconf-exception"

	LicenseGPL20WithBisonException License = "GPL-2.0-with-bison-exception"

	LicenseGPL20WithClasspathException License = "GPL-2.0-with-classpath-exception"

	LicenseGPL20WithFontException License = "GPL-2.0-with-font-exception"

	LicenseGPL20WithGCCException License = "GPL-2.0-with-GCC-exception"

	LicenseGPL30 License = "GPL-3.0"

	LicenseGPL301 License = "GPL-3.0+"

	LicenseGPL30Only License = "GPL-3.0-only"

	LicenseGPL30OrLater License = "GPL-3.0-or-later"

	LicenseGPL30WithAutoconfException License = "GPL-3.0-with-autoconf-exception"

	LicenseGPL30WithGCCException License = "GPL-3.0-with-GCC-exception"

	LicenseGSOAP13b License = "gSOAP-1.3b"

	LicenseGiftware License = "Giftware"

	LicenseGlide License = "Glide"

	LicenseGlulxe License = "Glulxe"

	LicenseGnuplot License = "gnuplot"

	LicenseHPND License = "HPND"

	LicenseHPNDSellVariant License = "HPND-sell-variant"

	LicenseHTMLTIDY License = "HTMLTIDY"

	LicenseHaskellReport License = "HaskellReport"

	LicenseHippocratic21 License = "Hippocratic-2.1"

	LicenseIBMPibs License = "IBM-pibs"

	LicenseICU License = "ICU"

	LicenseIJG License = "IJG"

	LicenseIMatix License = "iMatix"

	LicenseIPA License = "IPA"

	LicenseIPL10 License = "IPL-1.0"

	LicenseISC License = "ISC"

	LicenseImageMagick License = "ImageMagick"

	LicenseImlib2 License = "Imlib2"

	LicenseInfoZIP License = "Info-ZIP"

	LicenseIntel License = "Intel"

	LicenseIntelACPI License = "Intel-ACPI"

	LicenseInterbase10 License = "Interbase-1.0"

	LicenseJPNIC License = "JPNIC"

	LicenseJSON License = "JSON"

	LicenseJam License = "Jam"

	LicenseJasPer20 License = "JasPer-2.0"

	LicenseKnuthCTAN License = "Knuth-CTAN"

	LicenseLAL12 License = "LAL-1.2"

	LicenseLAL13 License = "LAL-1.3"

	LicenseLGPL20 License = "LGPL-2.0"

	LicenseLGPL201 License = "LGPL-2.0+"

	LicenseLGPL20Only License = "LGPL-2.0-only"

	LicenseLGPL20OrLater License = "LGPL-2.0-or-later"

	LicenseLGPL21 License = "LGPL-2.1"

	LicenseLGPL211 License = "LGPL-2.1+"

	LicenseLGPL21Only License = "LGPL-2.1-only"

	LicenseLGPL21OrLater License = "LGPL-2.1-or-later"

	LicenseLGPL30 License = "LGPL-3.0"

	LicenseLGPL301 License = "LGPL-3.0+"

	LicenseLGPL30Only License = "LGPL-3.0-only"

	LicenseLGPL30OrLater License = "LGPL-3.0-or-later"

	LicenseLGPLLR License = "LGPLLR"

	LicenseLOOP License = "LOOP"

	LicenseLPL10 License = "LPL-1.0"

	LicenseLPL102 License = "LPL-1.02"

	LicenseLPPL10 License = "LPPL-1.0"

	LicenseLPPL11 License = "LPPL-1.1"

	LicenseLPPL12 License = "LPPL-1.2"

	LicenseLPPL13a License = "LPPL-1.3a"

	LicenseLPPL13c License = "LPPL-1.3c"

	LicenseLZMASDK911To920 License = "LZMA-SDK-9.11-to-9.20"

	LicenseLZMASDK922 License = "LZMA-SDK-9.22"

	LicenseLatex2e License = "Latex2e"

	LicenseLeptonica License = "Leptonica"

	LicenseLiLiQP11 License = "LiLiQ-P-1.1"

	LicenseLiLiQR11 License = "LiLiQ-R-1.1"

	LicenseLiLiQRplus11 License = "LiLiQ-Rplus-1.1"

	LicenseLibpng License = "Libpng"

	LicenseLibpng20 License = "libpng-2.0"

	LicenseLibselinux10 License = "libselinux-1.0"

	LicenseLibtiff License = "libtiff"

	LicenseLibutilDavidNugent License = "libutil-David-Nugent"

	LicenseLinuxManPagesCopyleft License = "Linux-man-pages-copyleft"

	LicenseLinuxOpenIB License = "Linux-OpenIB"

	LicenseMIT License = "MIT"

	LicenseMIT0 License = "MIT-0"

	LicenseMITAdvertising License = "MIT-advertising"

	LicenseMITCMU License = "MIT-CMU"

	LicenseMITEnna License = "MIT-enna"

	LicenseMITFeh License = "MIT-feh"

	LicenseMITModernVariant License = "MIT-Modern-Variant"

	LicenseMITNFA License = "MITNFA"

	LicenseMITOpenGroup License = "MIT-open-group"

	LicenseMPL10 License = "MPL-1.0"

	LicenseMPL11 License = "MPL-1.1"

	LicenseMPL20 License = "MPL-2.0"

	LicenseMPL20NoCopyleftException License = "MPL-2.0-no-copyleft-exception"

	LicenseMSLPL License = "MS-LPL"

	LicenseMSPL License = "MS-PL"

	LicenseMSRL License = "MS-RL"

	LicenseMTLL License = "MTLL"

	LicenseMakeIndex License = "MakeIndex"

	LicenseMinpack License = "Minpack"

	LicenseMirOS License = "MirOS"

	LicenseMotosoto License = "Motosoto"

	LicenseMpiPermissive License = "mpi-permissive"

	LicenseMpich2 License = "mpich2"

	LicenseMplus License = "mplus"

	LicenseMulanPSL10 License = "MulanPSL-1.0"

	LicenseMulanPSL20 License = "MulanPSL-2.0"

	LicenseMultics License = "Multics"

	LicenseMup License = "Mup"

	LicenseN0BSD License = "0BSD"

	LicenseNAIST2003 License = "NAIST-2003"

	LicenseNASA13 License = "NASA-1.3"

	LicenseNBPL10 License = "NBPL-1.0"

	LicenseNCGLUK20 License = "NCGL-UK-2.0"

	LicenseNCSA License = "NCSA"

	LicenseNGPL License = "NGPL"

	LicenseNICTA10 License = "NICTA-1.0"

	LicenseNISTPD License = "NIST-PD"

	LicenseNISTPDFallback License = "NIST-PD-fallback"

	LicenseNLOD10 License = "NLOD-1.0"

	LicenseNLOD20 License = "NLOD-2.0"

	LicenseNLPL License = "NLPL"

	LicenseNOSL License = "NOSL"

	LicenseNPL10 License = "NPL-1.0"

	LicenseNPL11 License = "NPL-1.1"

	LicenseNPOSL30 License = "NPOSL-3.0"

	LicenseNRL License = "NRL"

	LicenseNTP License = "NTP"

	LicenseNTP0 License = "NTP-0"

	LicenseNaumen License = "Naumen"

	LicenseNetCDF License = "NetCDF"

	LicenseNetSNMP License = "Net-SNMP"

	LicenseNewsletr License = "Newsletr"

	LicenseNokia License = "Nokia"

	LicenseNoweb License = "Noweb"

	LicenseNunit License = "Nunit"

	LicenseOCCTPL License = "OCCT-PL"

	LicenseOCLC20 License = "OCLC-2.0"

	LicenseODCBy10 License = "ODC-By-1.0"

	LicenseODbL10 License = "ODbL-1.0"

	LicenseOFL10 License = "OFL-1.0"

	LicenseOFL10NoRFN License = "OFL-1.0-no-RFN"

	LicenseOFL10RFN License = "OFL-1.0-RFN"

	LicenseOFL11 License = "OFL-1.1"

	LicenseOFL11NoRFN License = "OFL-1.1-no-RFN"

	LicenseOFL11RFN License = "OFL-1.1-RFN"

	LicenseOGC10 License = "OGC-1.0"

	LicenseOGDLTaiwan10 License = "OGDL-Taiwan-1.0"

	LicenseOGLCanada20 License = "OGL-Canada-2.0"

	LicenseOGLUK10 License = "OGL-UK-1.0"

	LicenseOGLUK20 License = "OGL-UK-2.0"

	LicenseOGLUK30 License = "OGL-UK-3.0"

	LicenseOGTSL License = "OGTSL"

	LicenseOLDAP11 License = "OLDAP-1.1"

	LicenseOLDAP12 License = "OLDAP-1.2"

	LicenseOLDAP13 License = "OLDAP-1.3"

	LicenseOLDAP14 License = "OLDAP-1.4"

	LicenseOLDAP20 License = "OLDAP-2.0"

	LicenseOLDAP201 License = "OLDAP-2.0.1"

	LicenseOLDAP21 License = "OLDAP-2.1"

	LicenseOLDAP22 License = "OLDAP-2.2"

	LicenseOLDAP221 License = "OLDAP-2.2.1"

	LicenseOLDAP222 License = "OLDAP-2.2.2"

	LicenseOLDAP23 License = "OLDAP-2.3"

	LicenseOLDAP24 License = "OLDAP-2.4"

	LicenseOLDAP25 License = "OLDAP-2.5"

	LicenseOLDAP26 License = "OLDAP-2.6"

	LicenseOLDAP27 License = "OLDAP-2.7"

	LicenseOLDAP28 License = "OLDAP-2.8"

	LicenseOML License = "OML"

	LicenseOPL10 License = "OPL-1.0"

	LicenseOPUBL10 License = "OPUBL-1.0"

	LicenseOSETPL21 License = "OSET-PL-2.1"

	LicenseOSL10 License = "OSL-1.0"

	LicenseOSL11 License = "OSL-1.1"

	LicenseOSL20 License = "OSL-2.0"

	LicenseOSL21 License = "OSL-2.1"

	LicenseOSL30 License = "OSL-3.0"

	LicenseOUDA10 License = "O-UDA-1.0"

	LicenseOpenSSL License = "OpenSSL"

	LicensePDDL10 License = "PDDL-1.0"

	LicensePHP30 License = "PHP-3.0"

	LicensePHP301 License = "PHP-3.01"

	LicensePSF20 License = "PSF-2.0"

	LicenseParity600 License = "Parity-6.0.0"

	LicenseParity700 License = "Parity-7.0.0"

	LicensePlexus License = "Plexus"

	LicensePolyFormNoncommercial100 License = "PolyForm-Noncommercial-1.0.0"

	LicensePolyFormSmallBusiness100 License = "PolyForm-Small-Business-1.0.0"

	LicensePostgreSQL License = "PostgreSQL"

	LicensePsfrag License = "psfrag"

	LicensePsutils License = "psutils"

	LicensePython20 License = "Python-2.0"

	LicensePython201 License = "Python-2.0.1"

	LicenseQPL10 License = "QPL-1.0"

	LicenseQhull License = "Qhull"

	LicenseRHeCos11 License = "RHeCos-1.1"

	LicenseRPL11 License = "RPL-1.1"

	LicenseRPL15 License = "RPL-1.5"

	LicenseRPSL10 License = "RPSL-1.0"

	LicenseRSAMD License = "RSA-MD"

	LicenseRSCPL License = "RSCPL"

	LicenseRdisc License = "Rdisc"

	LicenseRuby License = "Ruby"

	LicenseSAXPD License = "SAX-PD"

	LicenseSCEA License = "SCEA"

	LicenseSGIB10 License = "SGI-B-1.0"

	LicenseSGIB11 License = "SGI-B-1.1"

	LicenseSGIB20 License = "SGI-B-2.0"

	LicenseSHL05 License = "SHL-0.5"

	LicenseSHL051 License = "SHL-0.51"

	LicenseSISSL License = "SISSL"

	LicenseSISSL12 License = "SISSL-1.2"

	LicenseSMLNJ License = "SMLNJ"

	LicenseSMPPL License = "SMPPL"

	LicenseSNIA License = "SNIA"

	LicenseSPL10 License = "SPL-1.0"

	LicenseSSHOpenSSH License = "SSH-OpenSSH"

	LicenseSSHShort License = "SSH-short"

	LicenseSSPL10 License = "SSPL-1.0"

	LicenseSWL License = "SWL"

	LicenseSaxpath License = "Saxpath"

	LicenseSchemeReport License = "SchemeReport"

	LicenseSendmail License = "Sendmail"

	LicenseSendmail823 License = "Sendmail-8.23"

	LicenseSimPL20 License = "SimPL-2.0"

	LicenseSleepycat License = "Sleepycat"

	LicenseSpencer86 License = "Spencer-86"

	LicenseSpencer94 License = "Spencer-94"

	LicenseSpencer99 License = "Spencer-99"

	LicenseStandardMLNJ License = "StandardML-NJ"

	LicenseSugarCRM113 License = "SugarCRM-1.1.3"

	LicenseSymlinks License = "Symlinks"

	LicenseTAPROHL10 License = "TAPR-OHL-1.0"

	LicenseTCL License = "TCL"

	LicenseTCPWrappers License = "TCP-wrappers"

	LicenseTMate License = "TMate"

	LicenseTORQUE11 License = "TORQUE-1.1"

	LicenseTOSL License = "TOSL"

	LicenseTUBerlin10 License = "TU-Berlin-1.0"

	LicenseTUBerlin20 License = "TU-Berlin-2.0"

	LicenseUCL10 License = "UCL-1.0"

	LicenseUPL10 License = "UPL-1.0"

	LicenseUnicodeDFS2015 License = "Unicode-DFS-2015"

	LicenseUnicodeDFS2016 License = "Unicode-DFS-2016"

	LicenseUnicodeTOU License = "Unicode-TOU"

	LicenseUnlicense License = "Unlicense"

	LicenseVOSTROM License = "VOSTROM"

	LicenseVSL10 License = "VSL-1.0"

	LicenseVim License = "Vim"

	LicenseW3C License = "W3C"

	LicenseW3C19980720 License = "W3C-19980720"

	LicenseW3C20150513 License = "W3C-20150513"

	LicenseWTFPL License = "WTFPL"

	LicenseWatcom10 License = "Watcom-1.0"

	LicenseWsuipa License = "Wsuipa"

	LicenseWxWindows License = "wxWindows"

	LicenseX11 License = "X11"

	LicenseX11DistributeModificationsVariant License = "X11-distribute-modifications-variant"

	LicenseXFree8611 License = "XFree86-1.1"

	LicenseXSkat License = "XSkat"

	LicenseXerox License = "Xerox"

	LicenseXinetd License = "xinetd"

	LicenseXnet License = "Xnet"

	LicenseXpp License = "xpp"

	LicenseYPL10 License = "YPL-1.0"

	LicenseYPL11 License = "YPL-1.1"

	LicenseZPL11 License = "ZPL-1.1"

	LicenseZPL20 License = "ZPL-2.0"

	LicenseZPL21 License = "ZPL-2.1"

	LicenseZed License = "Zed"

	LicenseZend20 License = "Zend-2.0"

	LicenseZimbra13 License = "Zimbra-1.3"

	LicenseZimbra14 License = "Zimbra-1.4"

	LicenseZlib License = "Zlib"

	LicenseZlibAcknowledgement License = "zlib-acknowledgement"
)

// Defines values for PackageVulnerabilitySeveritiesRisk.
const (
	PackageVulnerabilitySeveritiesRiskCRITICAL PackageVulnerabilitySeveritiesRisk = "CRITICAL"

	PackageVulnerabilitySeveritiesRiskHIGH PackageVulnerabilitySeveritiesRisk = "HIGH"

	PackageVulnerabilitySeveritiesRiskLOW PackageVulnerabilitySeveritiesRisk = "LOW"

	PackageVulnerabilitySeveritiesRiskMEDIUM PackageVulnerabilitySeveritiesRisk = "MEDIUM"

	PackageVulnerabilitySeveritiesRiskUNKNOWN PackageVulnerabilitySeveritiesRisk = "UNKNOWN"
)

// Defines values for PackageVulnerabilitySeveritiesType.
const (
	PackageVulnerabilitySeveritiesTypeCVSSV2 PackageVulnerabilitySeveritiesType = "CVSS_V2"

	PackageVulnerabilitySeveritiesTypeCVSSV3 PackageVulnerabilitySeveritiesType = "CVSS_V3"

	PackageVulnerabilitySeveritiesTypeUNSPECIFIED PackageVulnerabilitySeveritiesType = "UNSPECIFIED"
)

// Defines values for ScorecardVersion.
const (
	ScorecardVersionV2 ScorecardVersion = "V2"
)

// Defines values for ScorecardV2CheckName.
const (
	ScorecardV2CheckNameBinaryArtifacts ScorecardV2CheckName = "Binary-Artifacts"

	ScorecardV2CheckNameBranchProtection ScorecardV2CheckName = "Branch-Protection"

	ScorecardV2CheckNameCIIBestPractices ScorecardV2CheckName = "CII-Best-Practices"

	ScorecardV2CheckNameCITests ScorecardV2CheckName = "CI-Tests"

	ScorecardV2CheckNameCodeReview ScorecardV2CheckName = "Code-Review"

	ScorecardV2CheckNameContributors ScorecardV2CheckName = "Contributors"

	ScorecardV2CheckNameDangerousWorkflow ScorecardV2CheckName = "Dangerous-Workflow"

	ScorecardV2CheckNameDependencyUpdateTool ScorecardV2CheckName = "Dependency-Update-Tool"

	ScorecardV2CheckNameFuzzing ScorecardV2CheckName = "Fuzzing"

	ScorecardV2CheckNameLicense ScorecardV2CheckName = "License"

	ScorecardV2CheckNameMaintained ScorecardV2CheckName = "Maintained"

	ScorecardV2CheckNamePackaging ScorecardV2CheckName = "Packaging"

	ScorecardV2CheckNamePinnedDependencies ScorecardV2CheckName = "Pinned-Dependencies"

	ScorecardV2CheckNameSAST ScorecardV2CheckName = "SAST"

	ScorecardV2CheckNameSecurityPolicy ScorecardV2CheckName = "Security-Policy"

	ScorecardV2CheckNameSignedReleases ScorecardV2CheckName = "Signed-Releases"

	ScorecardV2CheckNameTokenPermissions ScorecardV2CheckName = "Token-Permissions"

	ScorecardV2CheckNameVulnerabilities ScorecardV2CheckName = "Vulnerabilities"

	ScorecardV2CheckNameWebhooks ScorecardV2CheckName = "Webhooks"
)

// ApiError defines model for ApiError.
type ApiError struct {
	// An error code identifying the error
	Code *string `json:"code,omitempty"`

	// A descriptive message about the error meant for developer consumption
	Message *string `json:"message,omitempty"`

	// Optional error specific attributes
	Params *ApiError_Params `json:"params,omitempty"`

	// An optional service or domain specific error group
	Type *string `json:"type,omitempty"`
}

// Optional error specific attributes
type ApiError_Params struct {
	AdditionalProperties map[string]struct {
		Key   *string `json:"key,omitempty"`
		Value *string `json:"value,omitempty"`
	} `json:"-"`
}

// License SPDX code
type License string

// PackageDependency defines model for PackageDependency.
type PackageDependency struct {
	Description    *string         `json:"description,omitempty"`
	Distance       *int            `json:"distance,omitempty"`
	Licenses       *[]License      `json:"licenses,omitempty"`
	PackageVersion *PackageVersion `json:"package_version,omitempty"`
}

// PackageDependents defines model for PackageDependents.
type PackageDependents struct {
	DirectDependents   *int `json:"direct_dependents,omitempty"`
	IndirectDependents *int `json:"indirect_dependents,omitempty"`
	TotalDependents    *int `json:"total_dependents,omitempty"`
}

// PackageProjectInfo defines model for PackageProjectInfo.
type PackageProjectInfo struct {
	DisplayName *string `json:"display_name,omitempty"`
	Forks       *int    `json:"forks,omitempty"`
	Issues      *int    `json:"issues,omitempty"`
	Link        *string `json:"link,omitempty"`
	Name        *string `json:"name,omitempty"`
	Stars       *int    `json:"stars,omitempty"`
	Type        *string `json:"type,omitempty"`
}

// PackageVersion defines model for PackageVersion.
type PackageVersion struct {
	// The ecosystem where this package belongs to
	Ecosystem string `json:"ecosystem"`

	// The name of the package
	Name string `json:"name"`

	// The version of the package
	Version string `json:"version"`
}

// PackageVersionInsight defines model for PackageVersionInsight.
type PackageVersionInsight struct {
	Dependencies *[]PackageDependency `json:"dependencies,omitempty"`
	Dependents   *PackageDependents   `json:"dependents,omitempty"`
	Licenses     *[]License           `json:"licenses,omitempty"`

	// The latest version available for the package
	PackageCurrentVersion *string                 `json:"package_current_version,omitempty"`
	PackageVersion        *PackageVersion         `json:"package_version,omitempty"`
	Projects              *[]PackageProjectInfo   `json:"projects,omitempty"`
	Scorecard             *Scorecard              `json:"scorecard,omitempty"`
	Vulnerabilities       *[]PackageVulnerability `json:"vulnerabilities,omitempty"`
}

// Subset of OSV schema required to perform policy
// decision by various tools
type PackageVulnerability struct {
	// Alias identifiers of the same vulnerability in
	// other databases
	Aliases *[]string `json:"aliases,omitempty"`

	// Vulnerability identifier
	Id *string `json:"id,omitempty"`

	// Related vulnerability identifiers for similar issues
	// in
	Related    *[]string `json:"related,omitempty"`
	Severities *[]struct {
		// Normalized risk rating computed from score
		Risk *PackageVulnerabilitySeveritiesRisk `json:"risk,omitempty"`

		// Type specific vulnerability score
		Score *string                             `json:"score,omitempty"`
		Type  *PackageVulnerabilitySeveritiesType `json:"type,omitempty"`
	} `json:"severities,omitempty"`

	// Short summary of vulnerability
	Summary *string `json:"summary,omitempty"`
}

// Normalized risk rating computed from score
type PackageVulnerabilitySeveritiesRisk string

// PackageVulnerabilitySeveritiesType defines model for PackageVulnerability.Severities.Type.
type PackageVulnerabilitySeveritiesType string

// Scorecard defines model for Scorecard.
type Scorecard struct {
	Content *ScorecardContentV2 `json:"content,omitempty"`
	Version *ScorecardVersion   `json:"version,omitempty"`
}

// ScorecardVersion defines model for Scorecard.Version.
type ScorecardVersion string

// ScorecardContentV2 defines model for ScorecardContentV2.
type ScorecardContentV2 struct {
	Checks     *[]ScorecardV2Check           `json:"checks,omitempty"`
	Date       *openapi_types.Date           `json:"date,omitempty"`
	Repository *ScorecardContentV2Repository `json:"repository,omitempty"`
	Score      *float32                      `json:"score,omitempty"`
	Scorecard  *ScorecardContentV2Version    `json:"scorecard,omitempty"`
}

// ScorecardContentV2Repository defines model for ScorecardContentV2Repository.
type ScorecardContentV2Repository struct {
	// Commit SHA where the scorecard checks where executed
	Commit *string `json:"commit,omitempty"`
	Name   *string `json:"name,omitempty"`
}

// ScorecardContentV2Version defines model for ScorecardContentV2Version.
type ScorecardContentV2Version struct {
	Commit  *string `json:"commit,omitempty"`
	Version *string `json:"version,omitempty"`
}

// ScorecardV2Check defines model for ScorecardV2Check.
type ScorecardV2Check struct {
	Details *[]string             `json:"details,omitempty"`
	Name    *ScorecardV2CheckName `json:"name,omitempty"`
	Reason  *string               `json:"reason,omitempty"`
	Score   *float32              `json:"score,omitempty"`
}

// ScorecardV2CheckName defines model for ScorecardV2Check.Name.
type ScorecardV2CheckName string

// Getter for additional properties for ApiError_Params. Returns the specified
// element and whether it was found
func (a ApiError_Params) Get(fieldName string) (value struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ApiError_Params
func (a *ApiError_Params) Set(fieldName string, value struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]struct {
			Key   *string `json:"key,omitempty"`
			Value *string `json:"value,omitempty"`
		})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ApiError_Params to handle AdditionalProperties
func (a *ApiError_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]struct {
			Key   *string `json:"key,omitempty"`
			Value *string `json:"value,omitempty"`
		})
		for fieldName, fieldBuf := range object {
			var fieldVal struct {
				Key   *string `json:"key,omitempty"`
				Value *string `json:"value,omitempty"`
			}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ApiError_Params to handle AdditionalProperties
func (a ApiError_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
